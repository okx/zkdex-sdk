name: java-sdk-CI

on:
  push:
    branches:
      - main
      - spot
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write



jobs:
#  linux:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        target: [x86_64]
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#      - name: Set up Rust
#        uses: actions-rust-lang/setup-rust-toolchain@v1
#        with:
#          rust-version: '1.70.0'
#      - name: Install cross
#        run: cargo install cross
#      - name: Build
#        run: cd rust-sdk && cross build --features java --target x86_64-unknown-linux-gnu --release
#      - name: Upload wheels
#        uses: actions/upload-artifact@v3
#        with:
#          name: linux_so
#          path: ./rust-sdk/target/x86_64-unknown-linux-gnu/release/libzkdex_sdk.so
  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            cuda: "10.1.243"
            visual_studio: "Visual Studio 16 2019"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rust-version: '1.70.0'
      - name: Install CUDA
        env:
          CUDA: ${{ matrix.cuda }}
          visual_studio: ${{ matrix.visual_studio }}
        shell: powershell
        run: .\scripts\actions\install_cuda_windows.ps1
      - name: nvcc check
        shell: powershell
        run: |
          nvcc -V
          ls $env:CUDA_PATH
          ls $env:CUDA_PATH\bin
          ls $env:CUDA_PATH\include
      - name: Build
        run: cd .\rust-sdk && cargo build --features java --release
      - name: Upload DLL
        uses: actions/upload-artifact@v3
        with:
          name: dll
          path: .\rust-sdk\target\release

